{"version":3,"sources":["debug.js"],"names":["electron","require","isDev","process","defaultApp","test","execPath","app","BrowserWindow","isMacOS","platform","devTools","win","getFocusedWindow","toggleDevTools","openDevTools","showDevTools","mode","webContents","refresh","reloadIgnoringCache","inspectElements","inspect","devToolsWebContents","executeJavaScript","isDevToolsOpened","on","isDevEnabled","module","exports","opts","Object","assign","enabled","e","devtronAlreadyAdded","getDevToolsExtensions","hasOwnProperty","call","addDevToolsExtension","path","err"],"mappings":"AAAA,aACA,KAAMA,UAAWC,QAAQ,UAAR,CAAjB,CAEMC,MAAQC,QAAQC,UAAR,EAAsB,8BAA8BC,IAA9B,CAAmCF,QAAQG,QAA3C,CAAtB,EAA8E,qBAAqBD,IAArB,CAA0BF,QAAQG,QAAlC,CAF5F,CAIMC,IAAMP,SAASO,GAJrB,CAKMC,cAAgBR,SAASQ,aAL/B,CAMMC,QAA+B,QAArB,WAAQC,QANxB,CAQA,QAASC,SAAT,CAAkBC,CAAlB,CAAuB,CACtBA,EAAMA,GAAOJ,cAAcK,gBAAd,EADS,CAGlBD,CAHkB,EAIrBA,EAAIE,cAAJ,EAED,CAED,QAASC,aAAT,CAAsBH,CAAtB,CAA2BI,CAA3B,CAAyC,CAGxC,GAFAJ,EAAMA,GAAOJ,cAAcK,gBAAd,EAEb,CAAID,CAAJ,CAAS,CACR,KAAMK,GAAO,cAAoCD,CAAjD,CACAJ,EAAIM,WAAJ,CAAgBH,YAAhB,CAA6B,CAACE,MAAD,CAA7B,CACA,CACD,CAED,QAASE,QAAT,CAAiBP,CAAjB,CAAsB,CACrBA,EAAMA,GAAOJ,cAAcK,gBAAd,EADQ,CAGjBD,CAHiB,EAIpBA,EAAIM,WAAJ,CAAgBE,mBAAhB,EAED,CAED,QAASC,gBAAT,EAA2B,CAC1B,KAAMT,GAAMJ,cAAcK,gBAAd,EAAZ,CACMS,EAAU,IAAM,CACrBV,EAAIW,mBAAJ,CAAwBC,iBAAxB,CAA0C,uCAA1C,CACA,CAHD,CAKIZ,CANsB,GAOrBA,EAAIM,WAAJ,CAAgBO,gBAAhB,EAPqB,CAQxBH,GARwB,EAUxBV,EAAIM,WAAJ,CAAgBQ,EAAhB,CAAmB,iBAAnB,CAAsCJ,CAAtC,CAVwB,CAWxBV,EAAIG,YAAJ,EAXwB,EAc1B,CAED,GAAIY,gBAAJ,CAEAC,OAAOC,OAAP,CAAiBC,GAAQ,OACxBA,GAAOC,OAAOC,MAAP,CAAc,CACpBC,QAAS,IADW,CAEpBjB,eAFoB,CAAd,CAGJc,CAHI,CADiB,CAMpB,OAAKG,OAAL,GAA4C,IAAjB,KAAKA,OAAL,EAA0B/B,KAArD,CANoB,MAWxBK,IAAImB,EAAJ,CAAO,wBAAP,CAAiC,CAACQ,CAAD,CAAItB,CAAJ,GAAY,CACxCkB,EAAKd,YADmC,EAE3CD,aAAaH,CAAb,CAAkBkB,EAAKd,YAAvB,CAED,CAJD,CAXwB,CAiBxBT,IAAImB,EAAJ,CAAO,OAAP,CAAgB,IAAM,CAErB,GAAI,CACH,KAAMS,GAAsB3B,cAAc4B,qBAAd,EAC3B,GAAGC,cAAH,CAAkBC,IAAlB,CAAuB9B,cAAc4B,qBAAd,EAAvB,CAA8D,SAA9D,CADD,CAGKD,CAJF,EAKF3B,cAAc+B,oBAAd,CAAmCtC,QAAQ,SAAR,EAAmBuC,IAAtD,CAED,CAAC,MAAOC,CAAP,CAAY,CAAE,CAUhB,CAnBD,CAjBwB,OAOjBd,eAPiB,CAqCxB,C,CAEDC,OAAOC,OAAP,CAAeV,OAAf,CAAyBA,O,CACzBS,OAAOC,OAAP,CAAelB,QAAf,CAA0BA,Q,CAC1BiB,OAAOC,OAAP,CAAed,YAAf,CAA8BA,Y,CAC9Ba,OAAOC,OAAP,CAAe3B,KAAf,CAAuB,UAAY,CAAE,MAAOA,MAAO,C,CACnD0B,OAAOC,OAAP,CAAeF,YAAf,CAA8B,UAAY,CAAE,MAAOA,aAAc,C","file":"debug.js","sourcesContent":["'use strict';\nconst electron = require('electron');\n//const localShortcut = require('electron-localshortcut');\nconst isDev = process.defaultApp || /[\\\\/]electron-prebuilt[\\\\/]/.test(process.execPath) || /[\\\\/]electron[\\\\/]/.test(process.execPath);\n\nconst app = electron.app;\nconst BrowserWindow = electron.BrowserWindow;\nconst isMacOS = process.platform === 'darwin';\n\nfunction devTools(win) {\n\twin = win || BrowserWindow.getFocusedWindow();\n\n\tif (win) {\n\t\twin.toggleDevTools();\n\t}\n}\n\nfunction openDevTools(win, showDevTools) {\n\twin = win || BrowserWindow.getFocusedWindow();\n\n\tif (win) {\n\t\tconst mode = showDevTools === true ? undefined : showDevTools;\n\t\twin.webContents.openDevTools({mode});\n\t}\n}\n\nfunction refresh(win) {\n\twin = win || BrowserWindow.getFocusedWindow();\n\n\tif (win) {\n\t\twin.webContents.reloadIgnoringCache();\n\t}\n}\n\nfunction inspectElements() {\n\tconst win = BrowserWindow.getFocusedWindow();\n\tconst inspect = () => {\n\t\twin.devToolsWebContents.executeJavaScript('DevToolsAPI.enterInspectElementMode()');\n\t};\n\n\tif (win) {\n\t\tif (win.webContents.isDevToolsOpened()) {\n\t\t\tinspect();\n\t\t} else {\n\t\t\twin.webContents.on('devtools-opened', inspect);\n\t\t\twin.openDevTools();\n\t\t}\n\t}\n}\n\nvar isDevEnabled = true;\n\nmodule.exports = opts => {\n\topts = Object.assign({\n\t\tenabled: null,\n\t\tshowDevTools: false\n\t}, opts);\n\n\tif (opts.enabled === false || (opts.enabled === null && !isDev)) {\n        isDevEnabled = false;\n\t\treturn;\n\t}\n\n\tapp.on('browser-window-created', (e, win) => {\n\t\tif (opts.showDevTools) {\n\t\t\topenDevTools(win, opts.showDevTools);\n\t\t}\n\t});\n\n\tapp.on('ready', () => {\n\t\t// activate devtron for the user if they have it installed and it's not already added\n\t\ttry {\n\t\t\tconst devtronAlreadyAdded = BrowserWindow.getDevToolsExtensions &&\n\t\t\t\t{}.hasOwnProperty.call(BrowserWindow.getDevToolsExtensions(), 'devtron');\n\n\t\t\tif (!devtronAlreadyAdded) {\n\t\t\t\tBrowserWindow.addDevToolsExtension(require('devtron').path);\n\t\t\t}\n\t\t} catch (err) {}\n\n        /*\n\t\tlocalShortcut.register('CmdOrCtrl+Shift+C', inspectElements);\n\t\tlocalShortcut.register(isMacOS ? 'Cmd+Alt+I' : 'Ctrl+Shift+I', devTools);\n\t\tlocalShortcut.register('F12', devTools);\n\n\t\tlocalShortcut.register('CmdOrCtrl+R', refresh);\n\t\tlocalShortcut.register('F5', refresh);\n        */\n\t});\n};\n\nmodule.exports.refresh = refresh;\nmodule.exports.devTools = devTools;\nmodule.exports.openDevTools = openDevTools;\nmodule.exports.isDev = function () { return isDev };\nmodule.exports.isDevEnabled = function () { return isDevEnabled };\n"]}