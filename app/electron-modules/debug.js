'use strict';const electron=require('electron'),isDev=process.defaultApp||/[\\/]electron-prebuilt[\\/]/.test(process.execPath)||/[\\/]electron[\\/]/.test(process.execPath),app=electron.app,BrowserWindow=electron.BrowserWindow,isMacOS='darwin'===process.platform;function devTools(a){a=a||BrowserWindow.getFocusedWindow(),a&&a.toggleDevTools()}function openDevTools(a,b){if(a=a||BrowserWindow.getFocusedWindow(),a){const c=!0===b?void 0:b;a.webContents.openDevTools({mode:c})}}function refresh(a){a=a||BrowserWindow.getFocusedWindow(),a&&a.webContents.reloadIgnoringCache()}function inspectElements(){const a=BrowserWindow.getFocusedWindow(),b=()=>{a.devToolsWebContents.executeJavaScript('DevToolsAPI.enterInspectElementMode()')};a&&(a.webContents.isDevToolsOpened()?b():(a.webContents.on('devtools-opened',b),a.openDevTools()))}var isDevAndEnabled=!0;module.exports=a=>{return a=Object.assign({enabled:null,showDevTools:!1},a),!1!==a.enabled&&(null!==a.enabled||isDev)?void(app.on('browser-window-created',(b,c)=>{a.showDevTools&&openDevTools(c,a.showDevTools)}),app.on('ready',()=>{try{const b=BrowserWindow.getDevToolsExtensions&&{}.hasOwnProperty.call(BrowserWindow.getDevToolsExtensions(),'devtron');b||BrowserWindow.addDevToolsExtension(require('devtron').path)}catch(b){}})):void(isDevAndEnabled=!1)},module.exports.refresh=refresh,module.exports.devTools=devTools,module.exports.openDevTools=openDevTools,module.exports.isDev=function(){return isDevAndEnabled};
//# sourceMappingURL=debug.js.map
