{"version":3,"sources":["app.js"],"names":["electron","require","app","quit","BrowserWindow","dialog","os","autoUpdater","debug","showDevTools","ipcMain","once","e","arg","sender","send","isDevEnabled","mainWindow","on","platform","autoUpdate","win","isDev","addListener","console","log","releaseNotes","releaseName","showMessageBox","title","type","detail","webContents","checkForUpdates","createWindow","minWidth","minHeight","show","setMenu","loadURL","__dirname","maximize"],"mappings":"AAAA,aAEA,GAAIA,UAAWC,QAAQ,UAAR,CAAf,CACIC,IAAMF,SAASE,GADnB,CAGGD,QAAQ,wCAAR,C,EAAmDC,IAAIC,IAAJ,E,CAEtD,GAAIC,eAAgBJ,SAASI,aAA7B,CAGIC,OAASL,SAASK,MAHtB,CAIIC,GAAKL,QAAQ,IAAR,CAJT,CAKIM,YAAcN,QAAQ,uBAAR,CALlB,CAOIO,MAAQP,QAAQ,6BAAR,CAPZ,CAUAO,MAAM,CAACC,eAAD,CAAN,C,CAEA,GAAIC,SAAUV,SAASU,OAAvB,CACAA,QAAQC,IAAR,CAAa,KAAb,CAAoB,SAAUC,CAAV,CAAaC,CAAb,CAAiB,CACtB,OAAP,GAD6B,EAE7BD,EAAEE,MAAF,CAASC,IAAT,CAAc,KAAd,CAAqBP,MAAMQ,YAAN,EAArB,CACP,CAHD,C,CAOA,GAAIC,YAAa,IAAjB,CAGAf,IAAIgB,EAAJ,CAAO,mBAAP,CAA4B,UAAW,CAGX,QAApB,UAAQC,QAHuB,EAI/BjB,IAAIC,IAAJ,EAEP,CAND,C,CAQA,GAAIiB,YAAa,SAAUC,CAAV,CAAc,CAC3B,IAAIb,MAAMc,KAAN,EAAJ,EAGA,KAAMH,GAAWb,GAAGa,QAAH,EAAjB,CACiB,OAAb,IAJJ,GAOAZ,YAAYgB,WAAZ,CAAwB,kBAAxB,CAA4C,SAASX,CAAT,CAAW,CACnDY,QAAQC,GAAR,CAAY,kBAAZ,CAAgCb,CAAhC,CACH,CAFD,CAPA,CAUAL,YAAYgB,WAAZ,CAAwB,OAAxB,CAAiC,SAASX,CAAT,CAAW,CACxCY,QAAQC,GAAR,CAAY,OAAZ,CAAqBb,CAArB,CACH,CAFD,CAVA,CAaAL,YAAYgB,WAAZ,CAAwB,qBAAxB,CAA+C,SAASX,CAAT,CAAW,CACtDY,QAAQC,GAAR,CAAY,qBAAZ,CAAmCb,CAAnC,CACH,CAFD,CAbA,CAgBAL,YAAYgB,WAAZ,CAAwB,sBAAxB,CAAgD,SAASX,CAAT,CAAW,CACvDY,QAAQC,GAAR,CAAY,sBAAZ,CAAoCb,CAApC,CACH,CAFD,CAhBA,CAmBAL,YAAYgB,WAAZ,CAAwB,mBAAxB,CAA6C,SAAUX,CAAV,CAAac,CAAb,CAA2BC,CAA3B,CAAgE,CACzGH,QAAQC,GAAR,CAAY,mBAAZ,CAAiCb,CAAjC,CADyG,CAEzGP,OAAOuB,cAAP,CAAsBP,CAAtB,CAA2B,CACvBQ,MAAO,6BADgB,CAEvBC,KAAM,MAFiB,CAGvBC,OAAS,cAAaJ,CAAY,oEAHX,CAA3B,CAKH,CAPD,CAnBA,CAgCAN,EAAIW,WAAJ,CAAgBrB,IAAhB,CAAqB,uBAArB,CAA8C,UAAU,CACpDJ,YAAY0B,eAAZ,EACH,CAFD,CAhCA,EAmCH,CApCD,CAsCIC,aAAe,UAAW,CAE1BjB,WAAa,GAAIb,cAAJ,CAAkB,CAC3ByB,MAAO,OADoB,CAE3BM,SAAU,GAFiB,CAG3BC,UAAW,GAHgB,CAI3BC,OAJ2B,CAAlB,CAFa,CAS1BpB,WAAWqB,OAAX,CAAmB,IAAnB,CAT0B,CAY1BrB,WAAWsB,OAAX,CAAmB,UAAYC,SAAZ,CAAwB,aAA3C,CAZ0B,CAc1BvB,WAAWN,IAAX,CAAgB,eAAhB,CAAiC,UAAY,CACzCM,WAAWwB,QAAX,EACH,CAFD,CAd0B,CAmB1BxB,WAAWC,EAAX,CAAc,QAAd,CAAwB,UAAW,CAI/BD,WAAa,IAChB,CALD,CAnB0B,CA0B1BG,WAAWH,UAAX,CACH,CAjED,CAqEAf,IAAIgB,EAAJ,CAAO,OAAP,CAAgBgB,YAAhB,C,CAEAhC,IAAIgB,EAAJ,CAAO,UAAP,CAAmB,UAAY,CAGf,IAAR,MAHuB,EAIvBgB,cAEP,CAND,C","file":"app.js","sourcesContent":["'use strict'\n\nvar electron = require('electron');\nvar app = electron.app;  // Module to control application life.\n\nif(require('./electron-modules/squirrel-startup.js')) app.quit();\n\nvar BrowserWindow = electron.BrowserWindow;  // Module to create native browser window.\n\n//Autoupdate\nvar dialog = electron.dialog;\nvar os = require('os');\nvar autoUpdater = require('electron-auto-updater');\n\nvar debug = require('./electron-modules/debug.js');\n//var client = require('electron-connect').client;\n\ndebug({showDevTools: true});\n\nvar ipcMain = electron.ipcMain;\nipcMain.once(\"dev\", function (e, arg){\n    if (arg == \"ready\")\n        e.sender.send(\"dev\", debug.isDevEnabled());\n});\n\n// Keep a global reference of the window object, if you don't, the window will\n// be closed automatically when the JavaScript object is GCed.\nvar mainWindow = null;\n\n// Quit when all windows are closed.\napp.on('window-all-closed', function() {\n    // On OS X it is common for applications and their menu bar\n    // to stay active until the user quits explicitly with Cmd + Q\n    if (process.platform != 'darwin') {\n        app.quit();\n    }\n});\n\nvar autoUpdate = function (win){\n    if (debug.isDev())\n        return;\n\n    const platform = os.platform();\n    if (platform === \"linux\")\n        return;\n\n    autoUpdater.addListener(\"update-available\", function(e){\n        console.log(\"update-available\", e);\n    });\n    autoUpdater.addListener(\"error\", function(e){\n        console.log(\"error\", e);\n    });\n    autoUpdater.addListener(\"checking-for-update\", function(e){\n        console.log(\"checking-for-update\", e);\n    });\n    autoUpdater.addListener(\"update-not-available\", function(e){\n        console.log(\"update-not-available\", e);\n    });\n    autoUpdater.addListener(\"update-downloaded\", function (e, releaseNotes, releaseName, releaseDate, updateURL) {\n        console.log(\"update-downloaded\", e);\n        dialog.showMessageBox(win, {\n            title: \"Actualización disponible\",\n            type: \"info\",\n            detail: `La version ${releaseName} ya se ha descargado, y se instalará la proxima vez que abra Suord`,\n        })\n    });\n\n    /*const version = app.getVersion()\n    if (platform === \"darwin\")\n        autoUpdater.setFeedURL(`https://${UPDATE_SERVER_HOST}/update/${platform}_${os.arch()}/${version}`)*/\n\n    win.webContents.once(\"did-frame-finish-load\", function(){\n        autoUpdater.checkForUpdates();\n    });\n}\n\nvar createWindow = function() {\n    // Create the browser window.\n    mainWindow = new BrowserWindow({\n        title: \"Suord\",\n        minWidth: 800,\n        minHeight: 600,\n        show: false\n    });\n\n    mainWindow.setMenu(null);\n\n    // Load the index.html of the app.\n    mainWindow.loadURL('file://' + __dirname + '/index.html');\n\n    mainWindow.once('ready-to-show', function () {\n        mainWindow.maximize()\n    });\n\n    // Emitted when the window is closed.\n    mainWindow.on('closed', function() {\n        // Dereference the window object, usually you would store windows\n        // in an array if your app supports multi windows, this is the time\n        // when you should delete the corresponding element.\n        mainWindow = null;\n    });\n\n    autoUpdate(mainWindow);\n}\n\n// This method will be called when Electron has finished\n// initialization and is ready to create browser windows.\napp.on('ready', createWindow);\n\napp.on('activate', function () {\n    // On macOS it's common to re-create a window in the app when the\n    // dock icon is clicked and there are no other windows open.\n    if (win === null) {\n        createWindow()\n    }\n})\n"]}