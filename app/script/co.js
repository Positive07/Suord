var slice=Array.prototype.slice;module.exports=co['default']=co.co=co,co.wrap=function(a){function b(){return co.call(this,a.apply(this,arguments))}return b.__generatorFunction__=a,b};function co(a){var b=this,c=slice.call(arguments,1);return new Promise(function(d,f){function g(k){var l;try{l=a.next(k)}catch(m){return f(m)}return j(l),null}function h(k){var l;try{l=a.throw(k)}catch(m){return f(m)}j(l)}function j(k){if(k.done)return d(k.value);var l=toPromise.call(b,k.value);return l&&isPromise(l)?l.then(g,h):h(new TypeError('You may only yield a function, promise, generator, array, or object, but the following object was passed: "'+(k.value+'"')))}return'function'==typeof a&&(a=a.apply(b,c)),a&&'function'==typeof a.next?void g():d(a)})}function toPromise(a){return a?isPromise(a)?a:isGeneratorFunction(a)||isGenerator(a)?co.call(this,a):'function'==typeof a?thunkToPromise.call(this,a):Array.isArray(a)?arrayToPromise.call(this,a):isObject(a)?objectToPromise.call(this,a):a:a}function thunkToPromise(a){var b=this;return new Promise(function(c,d){a.call(b,function(f,g){return f?d(f):void(2<arguments.length&&(g=slice.call(arguments,1)),c(g))})})}function arrayToPromise(a){return Promise.all(a.map(toPromise,this))}function objectToPromise(a){function b(k,l){c[l]=void 0,f.push(k.then(function(m){c[l]=m}))}var c=new a.constructor,d=Object.keys(a),f=[];for(var g=0;g<d.length;g++){var h=d[g],j=toPromise.call(this,a[h]);j&&isPromise(j)?b(j,h):c[h]=a[h]}return Promise.all(f).then(function(){return c})}function isPromise(a){return'function'==typeof a.then}function isGenerator(a){return'function'==typeof a.next&&'function'==typeof a.throw}function isGeneratorFunction(a){var b=a.constructor;return!!b&&('GeneratorFunction'===b.name||'GeneratorFunction'===b.displayName||isGenerator(b.prototype))}function isObject(a){return Object==a.constructor}
//# sourceMappingURL=co.js.map
