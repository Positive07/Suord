{"version":3,"sources":["electron-debug.js"],"names":["devTools","win","getFocusedWindow","openDevTools","showDevTools","mode","undefined","refresh","reloadIgnoringCache","inspectElements","BrowserWindow","inspect","webContents","isDevToolsOpened","on","electron","require","localShortcut","app","module","exports","opts","assign","Object","enabled","isDev","e","devtronAlreadyAdded","getDevToolsExtensions","addDevToolsExtension","path","err","register","isMacOS"],"mappings":"AAAA,YASA,SAASA,UAASC,GAAlBA,EAAAA,GAASD,cAAcE,mBAGlBD,GAAJA,EAAIA,iBAKL,QAASE,cAAaF,EAAKG,GAG1B,GAHDH,EAAAA,GAASE,cAAkBC,mBAGjB,CAAT,GAAAC,GAASD,KAAA,EAAAE,OAAAF,CACRH,GAAMI,YAAOD,cAAiBC,KAAAA,KAKhC,QAASE,SAAQN,GAAjBA,EAAAA,GAASM,cAAaL,mBAGjBD,GAAJA,EAAIA,YAAKO,sBAKV,QAASC,mBAAT,GAAAR,GAASQ,cAAkBP,mBACpBD,EAAMS,WACZT,EAAMU,oBAAAA,kBAAgB,yCAIlBV,KAAAA,EAAKW,YAAAC,mBACRF,KAAAV,EAAAW,YAEOE,GAAA,kBAAAH,GACNV,EAAIW,iBA3CP,GAAMG,UAAWC,QAAQ,YAAnBD,cAAWC,QAAQ,0BACnBC,MAAAA,QAAgBD,mBAGhBE,IAAMH,SAASG,IAAfA,cAANH,SAAAL,cACMA,QAAyBA,WAAzBA,QAAgBK,QA4CtBI,QAAOC,QAAU,SAAAC,GAAjBF,EAAOC,OAAPE,QACCD,QAAOE,KACNC,cADoB,GAEpBpB,GAGGiB,EAAKG,WAAY,GAA2B,OAAjBH,EAAKG,UAAqBC,QAIzDP,IAAIJ,GAAG,yBAA0B,SAACY,EAAGzB,GAAjCa,EAAGV,cACND,aAASC,EAAAA,EAAcA,gBAKxBc,IAAIJ,GAAG,QAAS,WACf,IACA,GAAIa,GAAAjB,cAAAkB,0BACGD,eAAAA,KAAAA,cAAsBjB,wBAAA,UAGvBiB,IACJjB,cAAcmB,qBAAqBb,QAAQ,WAAWc,MAEtD,MAAOC,IAETd,cAAce,SAAS,oBAAqBvB,iBAC5CQ,cAAce,SAASC,QAAU,YAAc,eAAgBjC,UAC/DiB,cAAce,SAAS,MAAOhC,UAE9BiB,cAAce,SAAS,cAAezB,SACtCU,cAAce,SAAS,KAAMzB,aAI/BY,OAAOC,QAAQb,QAAUA,QACzBY,OAAOC,QAAQpB,SAAWA,SAC1BmB,OAAOC,QAAQjB,aAAeA","file":"electron-debug.js","sourcesContent":["'use strict';\nconst electron = require('electron');\nconst localShortcut = require('electron-localshortcut');\nconst isDev = require('electron-is-dev');\n\nconst app = electron.app;\nconst BrowserWindow = electron.BrowserWindow;\nconst isMacOS = process.platform === 'darwin';\n\nfunction devTools(win) {\n\twin = win || BrowserWindow.getFocusedWindow();\n\n\tif (win) {\n\t\twin.toggleDevTools();\n\t}\n}\n\nfunction openDevTools(win, showDevTools) {\n\twin = win || BrowserWindow.getFocusedWindow();\n\n\tif (win) {\n\t\tconst mode = showDevTools === true ? undefined : showDevTools;\n\t\twin.webContents.openDevTools({mode});\n\t}\n}\n\nfunction refresh(win) {\n\twin = win || BrowserWindow.getFocusedWindow();\n\n\tif (win) {\n\t\twin.webContents.reloadIgnoringCache();\n\t}\n}\n\nfunction inspectElements() {\n\tconst win = BrowserWindow.getFocusedWindow();\n\tconst inspect = () => {\n\t\twin.devToolsWebContents.executeJavaScript('DevToolsAPI.enterInspectElementMode()');\n\t};\n\n\tif (win) {\n\t\tif (win.webContents.isDevToolsOpened()) {\n\t\t\tinspect();\n\t\t} else {\n\t\t\twin.webContents.on('devtools-opened', inspect);\n\t\t\twin.openDevTools();\n\t\t}\n\t}\n}\n\nmodule.exports = opts => {\n\topts = Object.assign({\n\t\tenabled: null,\n\t\tshowDevTools: false\n\t}, opts);\n\n\tif (opts.enabled === false || (opts.enabled === null && !isDev)) {\n\t\treturn;\n\t}\n\n\tapp.on('browser-window-created', (e, win) => {\n\t\tif (opts.showDevTools) {\n\t\t\topenDevTools(win, opts.showDevTools);\n\t\t}\n\t});\n\n\tapp.on('ready', () => {\n\t\t// activate devtron for the user if they have it installed and it's not already added\n\t\ttry {\n\t\t\tconst devtronAlreadyAdded = BrowserWindow.getDevToolsExtensions &&\n\t\t\t\t{}.hasOwnProperty.call(BrowserWindow.getDevToolsExtensions(), 'devtron');\n\n\t\t\tif (!devtronAlreadyAdded) {\n\t\t\t\tBrowserWindow.addDevToolsExtension(require('devtron').path);\n\t\t\t}\n\t\t} catch (err) {}\n\n\t\tlocalShortcut.register('CmdOrCtrl+Shift+C', inspectElements);\n\t\tlocalShortcut.register(isMacOS ? 'Cmd+Alt+I' : 'Ctrl+Shift+I', devTools);\n\t\tlocalShortcut.register('F12', devTools);\n\n\t\tlocalShortcut.register('CmdOrCtrl+R', refresh);\n\t\tlocalShortcut.register('F5', refresh);\n\t});\n};\n\nmodule.exports.refresh = refresh;\nmodule.exports.devTools = devTools;\nmodule.exports.openDevTools = openDevTools;\n"]}