{"version":3,"sources":["debug-menu.js"],"names":["electron","require","menu","inpectMenuTemplate","pos","label","click","remote","getCurrentWindow","inspectElement","x","y","inpectElementMenu","Menu","type","MenuItem","mnu","append","onContextMenu","e","preventDefault","popup","exports","middleware","ctx","next","push","install","window","addEventListener","uninstall","removeEventListener","openDevTools","_win","win","BrowserWindow","getFocusedWindow","webContents","isDevToolsOpened","closeDevTools","windowDebugMenu","electronDebug","submenu","devTools","accelerator","close","refresh","app","quit","exit"],"mappings":"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","file":"debug-menu.js","sourcesContent":["'use strict';\n\nconst electron = require('electron');\n\nlet menu = null;\n\nfunction inpectMenuTemplate(pos) {\n  return {\n    label: 'Inspeccionar Elemento',\n    click: () => {\n      electron.remote\n        .getCurrentWindow()\n        .inspectElement(pos.x, pos.y);\n    }\n  };\n}\n\nfunction inpectElementMenu(pos) {\n  const Menu = process.type === 'renderer'\n    ? electron.remote.Menu\n    : electron.Menu;\n\n  const MenuItem = process.type === 'renderer'\n    ? electron.remote.MenuItem\n    : electron.MenuItem;\n\n  const mnu = new Menu();\n\n  mnu.append(new MenuItem(\n    inpectMenuTemplate(pos)\n  ));\n\n  return mnu;\n}\n\nfunction onContextMenu(e) {\n  if (menu === null) {\n    menu = inpectElementMenu({x: e.x, y: e.y});\n  }\n  e.preventDefault();\n  menu.popup(electron.remote.getCurrentWindow());\n}\n\nexports.middleware = (ctx, next) => {\n  ctx.menu.push(inpectMenuTemplate(ctx.click));\n  next();\n};\n\n\nexports.install = () => {\n  window.addEventListener('contextmenu', onContextMenu);\n};\n\nexports.uninstall = () => {\n  window.removeEventListener('contextmenu', onContextMenu);\n};\n\n\nfunction openDevTools(_win) {\n  const win = _win || electron.BrowserWindow.getFocusedWindow();\n\n  if (win) {\n    if (win.webContents.isDevToolsOpened()) {\n      win.webContents.closeDevTools();\n    }\n\n    win.webContents.openDevTools();\n\n  }\n}\n\nexports.windowDebugMenu = _win => {\n  const electronDebug = require('electron-debug');\n  const win = _win || electron.BrowserWindow.getFocusedWindow();\n\n  return [\n    {\n      label: 'Devtools',\n      submenu: [{\n        label: 'Toggle',\n        click: () => {\n          electronDebug.devTools(win);\n        },\n        accelerator: 'F12'\n\n      }, {\n        label: 'Show',\n        click: () => {\n          openDevTools(win);\n        },\n        accelerator: 'CmdOrCtrl+F12'\n      }]\n    }, {\n      label: 'Current window',\n      submenu: [{\n        label: 'Close',\n        click: () => win.close(),\n        accelerator: 'CmdOrCtrl+Q'\n      }, {\n        label: 'Reload',\n        click: () => electronDebug.refresh(win),\n        accelerator: 'F5'\n      }]\n    }, {\n      label: 'App',\n      submenu: [{\n        label: 'Quit',\n        click: () => electron.app.quit(),\n        accelerator: 'Shift+CmdOrCtrl+Q'\n      }, {\n        label: 'Exit',\n        click: () => electron.app.exit(0),\n        accelerator: 'Shift+CmdOrCtrl+Esc'\n      }]\n    }\n  ];\n};\n"]}